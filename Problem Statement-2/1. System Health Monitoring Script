import psutil
import logging
from datetime import datetime

# Configure logging
logging.basicConfig(filename='system_health.log', level=logging.INFO, format='%(asctime)s %(message)s')

# Thresholds
CPU_USAGE_THRESHOLD = 80  # in percentage
MEMORY_USAGE_THRESHOLD = 80  # in percentage
DISK_USAGE_THRESHOLD = 80  # in percentage

def check_cpu_usage():
    cpu_usage = psutil.cpu_percent(interval=1)
    if cpu_usage > CPU_USAGE_THRESHOLD:
        logging.warning(f'High CPU usage detected: {cpu_usage}%')
    return cpu_usage

def check_memory_usage():
    memory = psutil.virtual_memory()
    memory_usage = memory.percent
    if memory_usage > MEMORY_USAGE_THRESHOLD:
        logging.warning(f'High Memory usage detected: {memory_usage}%')
    return memory_usage

def check_disk_usage():
    disk = psutil.disk_usage('/')
    disk_usage = disk.percent
    if disk_usage > DISK_USAGE_THRESHOLD:
        logging.warning(f'High Disk usage detected: {disk_usage}%')
    return disk_usage

def log_running_processes():
    processes = [proc.info for proc in psutil.process_iter(attrs=['pid', 'name', 'username'])]
    logging.info(f'Running processes: {processes}')
    return processes

def monitor_system():
    logging.info('Starting system health monitoring...')
    cpu_usage = check_cpu_usage()
    memory_usage = check_memory_usage()
    disk_usage = check_disk_usage()
    processes = log_running_processes()

    logging.info(f'CPU usage: {cpu_usage}%')
    logging.info(f'Memory usage: {memory_usage}%')
    logging.info(f'Disk usage: {disk_usage}%')

if __name__ == "__main__":
    monitor_system()
